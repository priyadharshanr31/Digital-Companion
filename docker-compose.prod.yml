# docker-compose.prod.yml - Production-ready setup with PostgreSQL + Redis
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: digital-companion-postgres
    environment:
      POSTGRES_DB: digital_companion
      POSTGRES_USER: dc_user
      POSTGRES_PASSWORD: dc_secure_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dc_user -d digital_companion"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: digital-companion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network

  # Digital Companion App
  digital-companion:
    build: .
    container_name: digital-companion-app
    ports:
      - "8501:8501"
    environment:
      # Database
      - DATABASE_URL=postgresql://dc_user:dc_secure_2024@postgres:5432/digital_companion
      - REDIS_URL=redis://redis:6379
      
      # API Keys
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      
      # App Config
      - ENVIRONMENT=production
      - MAX_CONCURRENT_USERS=500
      - CACHE_TTL=3600
      - ENABLE_PERFORMANCE_MONITORING=true
      
      # Streamlit Config
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - app_network

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: digital-companion-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@digitalcompanion.com
      PGADMIN_DEFAULT_PASSWORD: admin_secure_2024
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app_network

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: digital-companion-redis-ui
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  app_network:
    driver: bridge